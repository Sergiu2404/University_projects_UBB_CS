%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "parser.tab.h"

int currentLine = 1;
%}

%option noyywrap

STRING_CONST     \"[^\"]*\"
CHAR_CONST      [\'][a-zA-Z0-9 ][\']
IDENTIFIER      [a-zA-Z_][a-zA-Z0-9_]*
NUMBER_CONST    0|[+|-]?[1-9][0-9]*([.][0-9]*)?|[+|-]?0[.][0-9]*

%%
"start"         { return START; }
"end"           { return END; }
"read"          { return READ; }
"write"         { return WRITE; }
"if"            { return IF; }
"elif"          { return ELIF; }
"else"          { return ELSE; }
"for"           { return FOR; }
"while"         { return WHILE; }
"int"           { return INT; }
"float"         { return FLOAT; }
"string"        { return STRING; }
"char"          { return CHAR; }
"array"         { return ARRAY; }
"return"        { return RETURN; }
"sqrt"          { return SQRT; }

"smallerEq"     { return SMALLER_EQ; }
"greaterEq"     { return GREATER_EQ; }
"is"            { return IS; }
"isNot"         { return IS_NOT; }
"smaller"       { return SMALLER; }
"greater"       { return GREATER; }
"takes"         { return TAKES; }
"+"             { return PLUS; }
"-"             { return MINUS; }
"*"             { return MUL; }
"/"             { return DIV; }
"%"             { return MOD; }

"{"             { return LEFT_CURLY_BRACKET; }
"}"             { return RIGHT_CURLY_BRACKET; }
"("             { return LEFT_ROUND_BRACKET; }
")"             { return RIGHT_ROUND_BRACKET; }
"["             { return LEFT_BRACKET; }
"]"             { return RIGHT_BRACKET; }
":"             { return COLON; }
";"             { return SEMICOLON; }
","             { return COMMA; }

{IDENTIFIER}    { yylval.str = strdup(yytext); return IDENTIFIER; }
{NUMBER_CONST}  { yylval.str = strdup(yytext); return NUMBER_CONST; }
{STRING_CONST}  { yylval.str = strdup(yytext); return STRING_CONST; }
{CHAR_CONST}    { yylval.str = strdup(yytext); return CHAR_CONST; }

[ \t]+          { /* ignore whitespace */ }
[\n]+           { currentLine++; }

.               { printf("Unexpected character at line %d: %s\n", currentLine, yytext); }
%%